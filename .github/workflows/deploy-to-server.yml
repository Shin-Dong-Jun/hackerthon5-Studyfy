name: Build and Deploy

on:
  push:
    branches:
      - feature/cicd

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test --no-daemon

      - name: Upload JAR file
        uses: actions/upload-artifact@v2
        with:
          name: app-jar
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download JAR from artifacts
        uses: actions/download-artifact@v2
        with:
          name: app-jar
          path: .

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "▶ Creating apps/server directory if not exists"
            mkdir -p ~/apps/server

            echo "▶ Stopping existing application if running"
            pkill -f 'java -jar' || true

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "*.jar"
          target: "~/apps/server"
          strip_components: 1

      - name: Start Application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "▶ Starting application"
            cd ~/apps/server
            nohup java -jar *.jar > app.log 2>&1 &
            echo "▶ Application started"
